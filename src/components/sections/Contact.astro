---
import Section from '@/components/Section.astro';
import { t } from '@/i18n/utils';
---

<Section
  className={Astro.props.className}
  title={t('section.contact')}
  subtitle={t('section.contact.subtitle')}
>
  <form
    name="contact"
    data-netlify="true"
    netlify-honeypot="bot-field"
    class="mx-auto w-full max-w-2xl space-y-6 rounded-xl border border-white/10 bg-white/5 p-6 shadow-lg backdrop-blur-md"
    id="contact-form"
  >
    <input type="hidden" name="form-name" value="contact" />
    <p class="hidden">
      <label>
        Don’t fill this out if you’re human: <input name="bot-field" />
      </label>
    </p>
    <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
      <div class="flex flex-col">
        <label for="name" class="mb-1 text-sm font-medium text-white"
          >{t('contact.name')}</label
        >
        <input
          type="text"
          id="name"
          name="name"
          required
          class="rounded-md border border-skin-hue/20 bg-white/10 px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-skin-hue"
          placeholder={t('contact.name.placeholder')}
        />
      </div>
      <div class="flex flex-col">
        <label for="email" class="mb-1 text-sm font-medium text-white"
          >{t('contact.email')}</label
        >
        <input
          type="email"
          id="email"
          name="email"
          required
          class="rounded-md border border-skin-hue/20 bg-white/10 px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-skin-hue"
          placeholder={t('contact.email.placeholder')}
        />
      </div>
    </div>

    <div class="flex flex-col">
      <label for="message" class="mb-1 text-sm font-medium text-white"
        >{t('contact.message')}</label
      >
      <textarea
        id="message"
        name="message"
        rows="4"
        required
        class="rounded-md border border-skin-hue/20 bg-white/10 px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-skin-hue"
        placeholder={t('contact.message.placeholder')}></textarea>
    </div>
    <button
      type="submit"
      id="submit-btn"
      class="rounded-md border border-skin-hue/20 bg-skin-button-accent/20 px-10 py-2 text-xs font-medium text-skin-hue transition hover:bg-skin-button-accent hover:text-skin-inverted"
    >
      {t('contact.submit')}
    </button>

    <p id="form-status" class="mt-4 hidden text-sm text-white">
      {t('contact.success')} ✅
    </p>
  </form>
</Section>

<script>
  const handleSubmit = (event: Event) => {
    event.preventDefault();

    const myForm = event.target as HTMLFormElement;
    const formData = new FormData(myForm);

    fetch('/', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams(formData as any).toString(),
    })
      .then(() => {
        const statusMessage = document.getElementById('form-status');
        const submitButton = document.getElementById('submit-btn');
        if (statusMessage && submitButton) {
          submitButton.classList.add('hidden');
          statusMessage.classList.remove('hidden');
        }

        setTimeout(() => {
          if (statusMessage) {
            statusMessage.classList.add('hidden');
          }
          if (submitButton) {
            submitButton.classList.remove('hidden');
          }
          myForm.reset();
        }, 5000);
      })
      .catch((error) => alert(error));
  };

  document
    .querySelector('#contact-form')
    ?.addEventListener('submit', handleSubmit as EventListener);
</script>

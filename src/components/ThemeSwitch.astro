---
import { Icon } from "astro-icon/components";
---

<div
  class={`group flex cursor-pointer items-center gap-2 rounded-md bg-transparent ${Astro.props.className}`}
>
  <button id="themeSwitch" class="cursor-pointer" aria-label="Toggle dark mode">
    <i
      class="flex items-center gap-1 text-sm font-medium leading-6 text-skin-base transition-transform ease-in-out group-hover/theme:rotate-45"
    >
      <Icon
        name="ri:moon-fill"
        class="hidden dark:block"
        width={25}
        height={25}
      />
      <Icon name="ri:sun-fill" class="dark:hidden" width={20} height={20} />
    </i>
  </button>
</div>

<style>
  :global(.dark) {
    color-scheme: dark;
  }
</style>

<script>
  const themeSwitchButton = document.getElementById("themeSwitch");

  let isDark = document.documentElement.classList.contains("dark");

  function toggleDark(event: MouseEvent) {
    const x = event.clientX;
    const y = event.clientY;

    startTransition(x, y);
  }

  function startTransition(x: number, y: number) {
    const endRadius = Math.hypot(
      Math.max(x, innerWidth - x),
      Math.max(y, innerHeight - y),
    );

    const transition = document.startViewTransition(async () => {
      isDark = !isDark;
      updateTheme();
    });

    transition.ready.then(() => {
      const clipPath = [
        `circle(0px at ${x}px ${y}px)`,
        `circle(${endRadius}px at ${x}px ${y}px)`,
      ];
      document.documentElement.animate(
        {
          clipPath: isDark ? [...clipPath].reverse() : clipPath,
        },
        {
          duration: 700,
          easing: "ease-out",
          pseudoElement: isDark
            ? "::view-transition-old(root)"
            : "::view-transition-new(root)",
        },
      );
    });
  }

  function updateTheme() {
    document.documentElement.classList.toggle("dark", isDark);
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  if (themeSwitchButton) {
    themeSwitchButton.addEventListener("click", toggleDark);
  }

  // Initialize theme based on user preference or system setting
  if (localStorage.theme === "light") {
    isDark = false;
    updateTheme();
  }
</script>

<style is:global>
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: none;
    mix-blend-mode: normal;
  }
  ::view-transition-old(root) {
    z-index: 1;
  }
  ::view-transition-new(root) {
    z-index: 9999;
  }
  .dark::view-transition-old(root) {
    z-index: 9999;
  }
  .dark::view-transition-new(root) {
    z-index: 1;
  }
</style>
